// <auto-generated />
using System;
using DebtsApp.Web.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DebtsApp.Web.Migrations
{
    [DbContext(typeof(DebtContext))]
    [Migration("20191001170415_Add-Debts-And-Contact-Tables")]
    partial class AddDebtsAndContactTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DebtsApp.Web.Database.Models.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<long>("OwnerUserId")
                        .HasColumnName("owner_user_id");

                    b.Property<long?>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_contacts");

                    b.HasIndex("OwnerUserId")
                        .HasName("ix_contacts_owner_user_id");

                    b.HasIndex("UserId")
                        .HasName("ix_contacts_user_id");

                    b.ToTable("contacts");
                });

            modelBuilder.Entity("DebtsApp.Web.Database.Models.Debt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CreatorId")
                        .HasColumnName("creator_id");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<long?>("OwedContactId")
                        .HasColumnName("owed_contact_id");

                    b.Property<long?>("OwedId")
                        .HasColumnName("owed_id");

                    b.Property<long?>("OwingContactId")
                        .HasColumnName("owing_contact_id");

                    b.Property<long?>("OwingId")
                        .HasColumnName("owing_id");

                    b.Property<decimal>("Value")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_debts");

                    b.HasIndex("CreatorId")
                        .HasName("ix_debts_creator_id");

                    b.HasIndex("OwedContactId")
                        .HasName("ix_debts_owed_contact_id");

                    b.HasIndex("OwedId")
                        .HasName("ix_debts_owed_id");

                    b.HasIndex("OwingContactId")
                        .HasName("ix_debts_owing_contact_id");

                    b.HasIndex("OwingId")
                        .HasName("ix_debts_owing_id");

                    b.ToTable("debts");
                });

            modelBuilder.Entity("DebtsApp.Web.Database.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnName("password");

                    b.Property<string>("Seed")
                        .HasColumnName("seed");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users");
                });

            modelBuilder.Entity("DebtsApp.Web.Database.Models.Contact", b =>
                {
                    b.HasOne("DebtsApp.Web.Database.Models.User", "OwnerUser")
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .HasConstraintName("fk_contacts_users_owner_user_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DebtsApp.Web.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_contacts_users_user_id");
                });

            modelBuilder.Entity("DebtsApp.Web.Database.Models.Debt", b =>
                {
                    b.HasOne("DebtsApp.Web.Database.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .HasConstraintName("fk_debts_users_creator_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DebtsApp.Web.Database.Models.Contact", "OwedContact")
                        .WithMany()
                        .HasForeignKey("OwedContactId")
                        .HasConstraintName("fk_debts_contacts_owed_contact_id");

                    b.HasOne("DebtsApp.Web.Database.Models.User", "Owed")
                        .WithMany()
                        .HasForeignKey("OwedId")
                        .HasConstraintName("fk_debts_users_owed_id");

                    b.HasOne("DebtsApp.Web.Database.Models.Contact", "OwingContact")
                        .WithMany()
                        .HasForeignKey("OwingContactId")
                        .HasConstraintName("fk_debts_contacts_owing_contact_id");

                    b.HasOne("DebtsApp.Web.Database.Models.User", "Owing")
                        .WithMany()
                        .HasForeignKey("OwingId")
                        .HasConstraintName("fk_debts_users_owing_id");
                });
#pragma warning restore 612, 618
        }
    }
}
